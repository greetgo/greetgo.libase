buildscript {
  repositories {
    mavenLocal()
    if (System.getenv('GG_REPO')?.trim()) maven { url System.getenv('GG_REPO') }
    mavenCentral()
  }

  dependencies {
    classpath "kz.greetgo.plugins:greetgo.gradle.plugins:0.0.5"
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'idea'
//noinspection UnnecessaryQualifiedReference
apply plugin: kz.greetgo.gradle.plugins.ShortJavaPathPlugin
//noinspection UnnecessaryQualifiedReference
apply plugin: kz.greetgo.gradle.plugins.GgRepoUploadPlugin
//noinspection UnnecessaryQualifiedReference
apply plugin: kz.greetgo.gradle.plugins.MavenUploadPlugin

group = 'kz.greetgo'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0.10'

def nowDate = new Date()
def nowFormattedDate = nowDate.format("yyyy-MM-dd/HH:mm:ss")

jar {
  manifest {
    attributes 'Implementation-Title': project.name
    attributes 'Implementation-Version': version
    attributes 'Implementation-Vendor': 'greetgo!'
    attributes 'Built-By': System.getProperty("user.name")
    attributes 'Built-At': nowFormattedDate
  }
}

repositories {
  mavenLocal()
  if (System.getenv('GG_REPO')?.trim()) maven { url System.getenv('GG_REPO') }
  mavenCentral()
}

dependencies {
  testCompile 'postgresql:postgresql:9.1-901.jdbc4'
  testCompile 'org.testng:testng:6.5.1'
  testCompile 'org.easytesting:fest-assert-core:2.0M10'
  testCompile group: 'kz.greetgo.conf', name: 'greetgo.sys_params', version: '1.0.2'
  testCompile fileTree(dir: 'test_libs', include: '*.jar')
}

test.useTestNG()
//test.options.suites("test_resources/one_test.xml")

idea.module.downloadSources = true
idea.module.downloadJavadoc = true
idea.module.inheritOutputDirs = false
idea.module.outputDir = file("$buildDir/classes/main/")
idea.module.testOutputDir = file("$buildDir/classes/test/")

uploadToMavenCentral {
  description = 'Make comparization of databases and generates deltas'
  url = 'https://tech.greetgo.kz/test_project.php'
  scm {
    url = 'https://github.com/greetgo/test_project'
  }
  developer {
    id = 'pompei'
    name = 'ekolpakov'
    email = 'ekolpakov@greet-go.com'
  }
}
