buildscript {
  repositories {
    mavenLocal()
    if (System.getenv('GG_REPO')?.trim()) maven { url System.getenv('GG_REPO') }
    mavenCentral()
  }

  dependencies {
    classpath "kz.greetgo.plugins:greetgo.gradle.plugins:0.0.4"
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: kz.greetgo.gradle.plugins.ShortJavaPathPlugin

group = 'kz.greetgo'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0.7'

def nowDate = new Date()
def nowFormattedDate = nowDate.format("yyyy-MM-dd/HH:mm:ss")

jar {
  manifest {
    attributes 'Implementation-Title': project.name,
      'Implementation-Version': version, 'Implementation-Vendor': 'greetgo!',
      'Built-By': System.getProperty("user.name"), 'Built-At': nowFormattedDate
  }
}

sourceSets {
  main {
    resources.srcDirs = ["src/main/java", "src/main/resources"]
  }
  test {
    resources.srcDirs = ["src/test/java", "src/test/resources"]
  }
}
compileJava {
  options.encoding = "UTF-8"
}
compileTestJava {
  options.encoding = "UTF-8"
}


repositories {
  maven {
    name 'Our repository'
    url System.getenv('GG_REPO')
  }
}

dependencies {
  compile 'postgresql:postgresql:9.1-901.jdbc4'
  compile "greetgo.3rd-party:oracle-ojdbc6_g:11.2.0.3"
  //compile 'org.mybatis:mybatis:3.2.3'

  compile 'com.google.code.findbugs:annotations:2.0.1'

  testCompile 'org.testng:testng:6.5.1'
  testCompile 'org.easytesting:fest-assert-core:2.0M10'

}

test { useTestNG() }

task javadocJar(type: Jar, dependsOn: 'javadoc') {
  from javadoc.destinationDir
  classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

artifacts {
  archives javadocJar
  archives sourcesJar
}

uploadArchives {
  repositories.mavenDeployer {
    configuration = configurations.archives
    repository(
      url: System.getenv('GG_REPO')
    )

    pom.project {
      name project.name
      packaging 'jar'
    }
  }
}
